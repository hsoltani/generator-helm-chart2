images:
  nginx:
    repository: nginx
    tag: latest
  kibana:
    repository: kibana
    tag: 7.3.0
  mongoExpress:
    repository: mongo-express
    tag: 0.49.0
  phpmyadmin:
    repository: phpmyadmin/phpmyadmin
    tag: 4.7
  pgadmin:
    repository: dpage/pgadmin4
    tag: 4.11
  phpredisadmin:
    repository: erikdubbelboer/phpredisadmin
    tag: v1.11.4

config:
  clusterProvider: infrastructure
  imagePullPolicy: IfNotPresent
  updateStrategy: RollingUpdate
  nginx:
    baseUrl: ''
    hostname: ''
  secret: 'secret'
  elasticsearch:
    authPlugin: None
    commonConfig: ''
    dataConfig: ''
    database: generator-helm-chart2
    host: ''
    internal: true
    masterConfig: ''
    password: changeme
    pause: true
    port: 9200
    prometheus: false
    replicas: 1
    terminationPolicy: Delete
    url: ''
    username: elastic
    version: 6.4.0
    resources:
      requests:
        cpu: 250m
        memory: 512Mi
      limits:
        cpu: 500m
        memory: 1Gi
    versionMap:
      5.6-v1: 5.6
      5.6.4-v1: 5.6.4
      6.2-v1: 6.2
      6.2.4-v1: 6.2.4
      6.3-v1: 6.3
      6.3.0-v1: 6.3.0
      6.4: 6.4
      6.4.0: 6.4.0
    topology:
      enabled: false
      client:
        replicas: 1
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
          limits:
            cpu: 500m
            memory: 128Mi
      data:
        replicas: 1
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
          limits:
            cpu: 500m
            memory: 128Mi
      master:
        replicas: 1
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
          limits:
            cpu: 500m
            memory: 128Mi
  kibana:
    enabled: false
  mongodb:
    customConfig: ''
    database: generator-helm-chart2
    host: ''
    internal: true
    password: P@ssw0rd
    pause: true
    port: 27017
    prometheus: false
    terminationPolicy: Delete
    url: ''
    username: ''
    version: 4.1.13
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        cpu: 500m
        memory: 256Mi
    versionMap:
      3.4-v3: 3.4
      3.4.14: 3.4.17
      3.4-v4: 3.4.22
      3.4.22: 3.4.22
      3.6-v3: 3.6
      3.6.8: 3.6.8
      3.6-v4: 3.6.13
      3.6.13: 3.6.13
      4.0-v1: 4.0.5
      4.0.5-v1: 4.0.5
      4.0.3: 4.0.3
      4.0.5-v2: 4.0.5
      4.0-v2: 4.0.11
      4.0.11: 4.0.11
      4.1.7-v1: 4.1.7
      4.1.4: 4.1.4
      4.1.7-v2: 4.1.7-v2
      4.1.13: 4.1.13
      4.1: 4.1.13
    replicaSet:
      enabled: false
      replicas: 3
    shardTopology:
      enabled: false
      configServer:
        replicas: 3
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
          limits:
            cpu: 500m
            memory: 128Mi
      mongos:
        replicas: 2
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
          limits:
            cpu: 500m
            memory: 128Mi
      shard:
        shards: 3
        replicas: 2
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
          limits:
            cpu: 500m
            memory: 128Mi
  mongoExpress:
    enabled: false
    password: pass
    username: admin
  mysql:
    authenticationPlugin: mysql_native_password
    customConfig: ''
    database: generator-helm-chart2
    host: ''
    internal: true
    password: P@ssw0rd
    pause: true
    port: 3306
    prometheus: false
    replicas: 1
    terminationPolicy: Delete
    url: ''
    username: root
    version: 8.0.14
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        cpu: 500m
        memory: 256Mi
    versionMap:
      5.7-v1: 5.7.25
      5.7-v2: 5.7.25
      5.7.25: 5.7.25
      8.0-v1: 8.0.3
      8.0-v2: 8.0.14
      8.0.14: 8.0.14
      8.0.3: 8.0.3
  phpmyadmin:
    enabled: false
  postgres:
    customConfig: ''
    database: generator-helm-chart2
    host: ''
    internal: true
    password: P@ssw0rd
    pause: true
    port: 5432
    prometheus: false
    replicas: 1
    standbyMode: Hot
    terminationPolicy: Delete
    url: ''
    username: postgres
    version: 11.2
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        cpu: 500m
        memory: 256Mi
    versionMap:
      9.6-v2: 9.6
      9.6.7-v2: 9.6
      10.2-v2: 10.2
      10.6: 10.6
      11.1: 11.1
      11.2: 11.2
  pgadmin:
    email: admin
    enabled: false
    password: pass
  redis:
    customConfig: ''
    host: ''
    internal: true
    password: ''
    port: 6379
    prometheus: false
    replicas: 1
    shards: 1
    url: ''
    username: ''
    version: 5.0.3-v1
  phpredisadmin:
    enabled: false
    password: pass
    username: admin

service:
  nginx:
    type: NodePort
    externalTrafficPolicy: Cluster
    nodePorts:
      http: ''
  kibana:
    type: NodePort
    externalTrafficPolicy: Cluster
    nodePorts:
      http: ''
  mongoExpress:
    type: NodePort
    externalTrafficPolicy: Cluster
    nodePorts:
      http: ''
  phpmyadmin:
    type: NodePort
    externalTrafficPolicy: Cluster
    nodePorts:
      http: ''
  pgadmin:
    type: NodePort
    externalTrafficPolicy: Cluster
    nodePorts:
      http: ''
  phpredisadmin:
    type: NodePort
    externalTrafficPolicy: Cluster
    nodePorts:
      http: ''
  elasticsearch:
    type: ClusterIP
    externalTrafficPolicy: Cluster
    nodePorts:
      elasticsearch: ''
  mongodb:
    type: ClusterIP
    externalTrafficPolicy: Cluster
    nodePorts:
      mongodb: ''
  mysql:
    type: ClusterIP
    externalTrafficPolicy: Cluster
    nodePorts:
      mysql: ''
  postgres:
    type: ClusterIP
    externalTrafficPolicy: Cluster
    nodePorts:
      postgres: ''
  redis:
    type: ClusterIP
    externalTrafficPolicy: Cluster
    nodePorts:
      redis: ''

ingress:
  nginx:
    certificate: ''
    enabled: false
    hostname: ''
    path: /
    tls: false
    issuer:
      name: letsencrypt-staging
  kibana:
    certificate: ''
    enabled: false
    hostname: ''
    path: /
    tls: false
    issuer:
      name: letsencrypt-staging
  mongoExpress:
    certificate: ''
    enabled: false
    hostname: ''
    path: /
    tls: false
    issuer:
      name: letsencrypt-staging
  phpmyadmin:
    certificate: ''
    enabled: false
    hostname: ''
    path: /
    tls: false
    issuer:
      name: letsencrypt-staging
  pgadmin:
    certificate: ''
    enabled: false
    hostname: ''
    path: /
    tls: false
    issuer:
      name: letsencrypt-staging
  phpredisadmin:
    certificate: ''
    enabled: false
    hostname: ''
    path: /
    tls: false
    issuer:
      name: letsencrypt-staging

persistence:
  accessMode: ReadWriteOnce
  enabled: false
  existingClaim: ''
  size: 1Gi
  storageClass: ''
  velero:
    enabled: false
  stash:
    bucket: ''
    container: ''
    enabled: false
    endpoint: s3.amazonaws.com
    keepLast: 30
    paused: false
    prefix: stash
    schedule: '0 0 * * *'
    secret: stash-config-stash-config
    type: s3
    restore:
      snapshot:
        data: ''
        elasticsearch: ''
        mongodb: ''
        mysql: ''
        postgres: ''

probes:
  liveness:
    initialDelaySeconds: 120
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  readiness:
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
